/*
 * This file is generated by jOOQ.
 */
package Backend.JBProjekt.Generated.jbprojekt;


import Backend.JBProjekt.Generated.DefaultCatalog;
import Backend.JBProjekt.Generated.jbprojekt.tables.CategoryTree;
import Backend.JBProjekt.Generated.jbprojekt.tables.Inventory;
import Backend.JBProjekt.Generated.jbprojekt.tables.InventoryItem;
import Backend.JBProjekt.Generated.jbprojekt.tables.InventoryManagement;
import Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategory;
import Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategoryItemDescriptor;
import Backend.JBProjekt.Generated.jbprojekt.tables.ItemDescriptor;
import Backend.JBProjekt.Generated.jbprojekt.tables.UnitConverter;
import Backend.JBProjekt.Generated.jbprojekt.tables.User;
import Backend.JBProjekt.Generated.jbprojekt.tables.Waste;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Jbprojekt extends SchemaImpl {

    private static final long serialVersionUID = -1928506862;

    /**
     * The reference instance of <code>jbprojekt</code>
     */
    public static final Jbprojekt JBPROJEKT = new Jbprojekt();

    /**
     * The table <code>jbprojekt.category_tree</code>.
     */
    public final CategoryTree CATEGORY_TREE = Backend.JBProjekt.Generated.jbprojekt.tables.CategoryTree.CATEGORY_TREE;

    /**
     * The table <code>jbprojekt.inventory</code>.
     */
    public final Inventory INVENTORY = Backend.JBProjekt.Generated.jbprojekt.tables.Inventory.INVENTORY;

    /**
     * The table <code>jbprojekt.inventory_item</code>.
     */
    public final InventoryItem INVENTORY_ITEM = Backend.JBProjekt.Generated.jbprojekt.tables.InventoryItem.INVENTORY_ITEM;

    /**
     * The table <code>jbprojekt.inventory_management</code>.
     */
    public final InventoryManagement INVENTORY_MANAGEMENT = Backend.JBProjekt.Generated.jbprojekt.tables.InventoryManagement.INVENTORY_MANAGEMENT;

    /**
     * The table <code>jbprojekt.item_category</code>.
     */
    public final ItemCategory ITEM_CATEGORY = Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategory.ITEM_CATEGORY;

    /**
     * The table <code>jbprojekt.item_category_item_descriptor</code>.
     */
    public final ItemCategoryItemDescriptor ITEM_CATEGORY_ITEM_DESCRIPTOR = Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategoryItemDescriptor.ITEM_CATEGORY_ITEM_DESCRIPTOR;

    /**
     * The table <code>jbprojekt.item_descriptor</code>.
     */
    public final ItemDescriptor ITEM_DESCRIPTOR = Backend.JBProjekt.Generated.jbprojekt.tables.ItemDescriptor.ITEM_DESCRIPTOR;

    /**
     * The table <code>jbprojekt.unit_converter</code>.
     */
    public final UnitConverter UNIT_CONVERTER = Backend.JBProjekt.Generated.jbprojekt.tables.UnitConverter.UNIT_CONVERTER;

    /**
     * The table <code>jbprojekt.user</code>.
     */
    public final User USER = Backend.JBProjekt.Generated.jbprojekt.tables.User.USER;

    /**
     * The table <code>jbprojekt.waste</code>.
     */
    public final Waste WASTE = Backend.JBProjekt.Generated.jbprojekt.tables.Waste.WASTE;

    /**
     * No further instances allowed
     */
    private Jbprojekt() {
        super("jbprojekt", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            CategoryTree.CATEGORY_TREE,
            Inventory.INVENTORY,
            InventoryItem.INVENTORY_ITEM,
            InventoryManagement.INVENTORY_MANAGEMENT,
            ItemCategory.ITEM_CATEGORY,
            ItemCategoryItemDescriptor.ITEM_CATEGORY_ITEM_DESCRIPTOR,
            ItemDescriptor.ITEM_DESCRIPTOR,
            UnitConverter.UNIT_CONVERTER,
            User.USER,
            Waste.WASTE);
    }
}
