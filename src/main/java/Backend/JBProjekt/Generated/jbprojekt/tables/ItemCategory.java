/*
 * This file is generated by jOOQ.
 */
package Backend.JBProjekt.Generated.jbprojekt.tables;


import Backend.JBProjekt.Generated.jbprojekt.Indexes;
import Backend.JBProjekt.Generated.jbprojekt.Jbprojekt;
import Backend.JBProjekt.Generated.jbprojekt.Keys;
import Backend.JBProjekt.Generated.jbprojekt.tables.records.ItemCategoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemCategory extends TableImpl<ItemCategoryRecord> {

    private static final long serialVersionUID = 73846396;

    /**
     * The reference instance of <code>jbprojekt.item_category</code>
     */
    public static final ItemCategory ITEM_CATEGORY = new ItemCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemCategoryRecord> getRecordType() {
        return ItemCategoryRecord.class;
    }

    /**
     * The column <code>jbprojekt.item_category.id</code>.
     */
    public final TableField<ItemCategoryRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>jbprojekt.item_category.parent_id</code>.
     */
    public final TableField<ItemCategoryRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>jbprojekt.item_category.name</code>.
     */
    public final TableField<ItemCategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>jbprojekt.item_category.activated</code>.
     */
    public final TableField<ItemCategoryRecord, Byte> ACTIVATED = createField("activated", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.TINYINT)), this, "");

    /**
     * Create a <code>jbprojekt.item_category</code> table reference
     */
    public ItemCategory() {
        this(DSL.name("item_category"), null);
    }

    /**
     * Create an aliased <code>jbprojekt.item_category</code> table reference
     */
    public ItemCategory(String alias) {
        this(DSL.name(alias), ITEM_CATEGORY);
    }

    /**
     * Create an aliased <code>jbprojekt.item_category</code> table reference
     */
    public ItemCategory(Name alias) {
        this(alias, ITEM_CATEGORY);
    }

    private ItemCategory(Name alias, Table<ItemCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemCategory(Name alias, Table<ItemCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ItemCategory(Table<O> child, ForeignKey<O, ItemCategoryRecord> key) {
        super(child, key, ITEM_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Jbprojekt.JBPROJEKT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ITEM_CATEGORY_FK_CATEGORY_CATEGORY, Indexes.ITEM_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ItemCategoryRecord, Integer> getIdentity() {
        return Keys.IDENTITY_ITEM_CATEGORY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemCategoryRecord> getPrimaryKey() {
        return Keys.KEY_ITEM_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemCategoryRecord>>asList(Keys.KEY_ITEM_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ItemCategoryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemCategoryRecord, ?>>asList(Keys.FK_CATEGORY_CATEGORY);
    }

    public Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategory itemCategory() {
        return new Backend.JBProjekt.Generated.jbprojekt.tables.ItemCategory(this, Keys.FK_CATEGORY_CATEGORY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemCategory as(String alias) {
        return new ItemCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemCategory as(Name alias) {
        return new ItemCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemCategory rename(String name) {
        return new ItemCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemCategory rename(Name name) {
        return new ItemCategory(name, null);
    }
}
