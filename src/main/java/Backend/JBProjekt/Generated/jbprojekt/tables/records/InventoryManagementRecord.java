/*
 * This file is generated by jOOQ.
 */
package Backend.JBProjekt.Generated.jbprojekt.tables.records;


import Backend.JBProjekt.Generated.jbprojekt.tables.InventoryManagement;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InventoryManagementRecord extends UpdatableRecordImpl<InventoryManagementRecord> implements Record3<String, Integer, Integer> {

    private static final long serialVersionUID = -1688493096;

    /**
     * Setter for <code>jbprojekt.inventory_management.primary_key</code>.
     */
    public void setPrimaryKey_(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>jbprojekt.inventory_management.primary_key</code>.
     */
    public String getPrimaryKey_() {
        return (String) get(0);
    }

    /**
     * Setter for <code>jbprojekt.inventory_management.expected_inventory_id</code>.
     */
    public void setExpectedInventoryId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>jbprojekt.inventory_management.expected_inventory_id</code>.
     */
    public Integer getExpectedInventoryId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jbprojekt.inventory_management.current_inventory_id</code>.
     */
    public void setCurrentInventoryId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>jbprojekt.inventory_management.current_inventory_id</code>.
     */
    public Integer getCurrentInventoryId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<String, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return InventoryManagement.INVENTORY_MANAGEMENT.PRIMARY_KEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return InventoryManagement.INVENTORY_MANAGEMENT.EXPECTED_INVENTORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return InventoryManagement.INVENTORY_MANAGEMENT.CURRENT_INVENTORY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getPrimaryKey_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getExpectedInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component3() {
        return getCurrentInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getPrimaryKey_();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getExpectedInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getCurrentInventoryId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryManagementRecord value1(String value) {
        setPrimaryKey_(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryManagementRecord value2(Integer value) {
        setExpectedInventoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryManagementRecord value3(Integer value) {
        setCurrentInventoryId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public InventoryManagementRecord values(String value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InventoryManagementRecord
     */
    public InventoryManagementRecord() {
        super(InventoryManagement.INVENTORY_MANAGEMENT);
    }

    /**
     * Create a detached, initialised InventoryManagementRecord
     */
    public InventoryManagementRecord(String primaryKey, Integer expectedInventoryId, Integer currentInventoryId) {
        super(InventoryManagement.INVENTORY_MANAGEMENT);

        set(0, primaryKey);
        set(1, expectedInventoryId);
        set(2, currentInventoryId);
    }
}
